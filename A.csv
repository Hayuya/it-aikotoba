"id","title","slug","description","content","category","difficulty","tags","relatedTerms","isRecommended","order","search_title"
"it-term-transaction","transaction（トランザクション）","transaction","関連する複数の処理を一つにまとめた、分割不可能な処理単位。すべての処理が成功するか、すべて失敗するかのどちらかであることが保証され、データの整合性を保つために不可欠な概念。","トランザクション。データベースを扱う上で、データの整合性を担保するための根幹をなす概念だ。これを単なる「処理」と同一視しているうちは素人だな。これは「分割してはならない、一連の処理のまとまり」だ。

最も分かりやすい例が、銀行の口座振替だ。
1.  Aの口座から1万円を引き落とす。
2.  Bの口座に1万円を預け入れる。

この2つの処理は、必ずセットで成功しなければならない。1だけが成功して2が失敗すれば、1万円が宙に消える。逆に2だけが成功すれば、無から1万円が生まれる。どちらもシステムとして破綻している。

トランザクションとは、この一連の処理を「一つのパッケージ」として扱い、「全部成功」するか「全部失敗（元の状態に戻す）」のどちらかの結果しか許さない、という約束事だ。

### トランザクションのACID特性

この信頼性を保証するために、トランザクションはACIDと呼ばれる4つの特性を持つことが求められる。これは絶対的な原則だ。

-  -Atomicity (原子性)-
    - 「All or Nothing」。トランザクションに含まれる処理は、すべてが実行されるか、一つも実行されないかのどちらかであることが保証される。中途半端な状態は絶対に許さない。まさに「原子」のように、それ以上分割できない単位であることを意味する。

-  -Consistency (一貫性)-
    - トランザクションの実行前後で、データの整合性が保たれていることを保証する。先の例で言えば、「AとBの口座残高の合計は、振替の前後で変わらない」といった、あらかじめ定められたルールを絶対に破らない。

-  -Isolation (独立性)-
    - 複数のトランザクションを同時に実行した場合でも、互いに干渉せず、あたかも一つずつ順番に実行されたかのような結果を保証する。あるトランザクションの処理中の、中途半端なデータが他のトランザクションから見えてはならない。

-  -Durability (永続性)-
    - 正常に完了したトランザクションの結果は、たとえシステムに障害が発生しても失われないことが保証される。結果はデータベースに恒久的に記録される。

このACID特性があるからこそ、我々はデータベースのデータを信頼できる。データの完全性（Integrity）を維持することは、情報セキュリティの基本中の基本だ。","it-foundation","beginner","data-integrity,architecture","",false,6,"TRANSACTION,transaction,Transaction,トランザクション,とらんざくしょん"