"id","title","slug","description","content","category","difficulty","tags","relatedTerms","isRecommended","order"
"memcached-01","Memcached","memcached","Memcachedは、メモリ上にデータをキャッシュすることで、データベースへのアクセス負荷を軽減し、Webアプリケーションの応答速度を向上させるための分散メモリキャッシュシステムだ。","
# Memcached

お前が学ぶべきなのは、攻撃の技術だけじゃない。システムをどう守り、どう効率化するかという視点も必要だ。今回は `Memcached` について頭に叩き込んでおけ。

## Memcachedとは何か？

一言で言えば、「高速な分散メモリキャッシュシステム」だ。
データベースへの問い合わせ結果やAPIのレスポンス、その他なんでもいい。頻繁に使うデータを一時的にサーバのメモリ（RAM）に保存しておく仕組みだ。

- `メモリ上`：ディスク（HDDやSSD）より桁違いに読み書きが速い。
- `キャッシュ`：一度取得したデータを再利用するために保管しておくこと。
- `分散`：複数のサーバで協力して、巨大なキャッシュ空間を作り出せる。

例えるなら、巨大な図書館（データベース）から毎回本を探すのではなく、よく読む本だけを自分の机（メモリ）の上に広げておくようなものだ。次からは机の上を見ればいいから、圧倒的に速い。

## なぜ必要なのか？

Webサイトやアプリケーションの表示が遅い原因の多くは、データベースへのアクセスがボトルネックになっているからだ。
同じデータ、例えば人気記事のトップ10などを、アクセスがあるたびにデータベースに問い合わせるのは非効率だろう。
Memcachedを使ってその結果をキャッシュしておけば、データベースの負荷を劇的に減らし、アプリケーションの応答速度を向上させられる。

## セキュリティ上の注意点

ここからが本題だ。便利さには必ずリスクが伴う。
Memcachedは元々、信頼できる内部ネットワークで利用されることを想定して作られている。そのため、認証などのセキュリティ機能が非常に貧弱だ。

### １. 外部への公開は厳禁
ファイアウォールの内側に置き、絶対にインターネットに直接公開してはいけない。
万が一公開してしまうと、保存されている情報が誰でも閲覧可能になったり、DDoS攻撃の踏み台にされたりする。特にUDPポートが有効になっていると、「Memcachedリフレクション攻撃（アンプ攻撃）」に悪用される危険性が高い。

### ２. アクセス制御
利用するアプリケーションサーバからのみアクセスを許可するように、ファイアウォールやセキュリティグループで厳密に制御しろ。

### ３. 認証機能の利用
新しいバージョンではSASL（Simple Authentication and Security Layer）による認証がサポートされている。必要であれば、これを使って最低限の認証は設定しておくべきだ。

---

性能向上のための強力なツールだが、設定を誤れば致命的なセキュリティホールになる。それがMemcachedだ。仕組みの理解と、適切なセキュリティ対策はセットで覚えろ。いいな。
","it-foundation","beginner","architecture,networking,security,scalability,availability","",false,101