"id","title","slug","description","content","category","difficulty","tags","relatedTerms","isRecommended","order"
"it-sec-faulttolerance-01","fault tolerance（フォールトトレランス）","fault-tolerance","フォールトトレランスは、システムを構成する一部のコンポーネントに障害が発生しても、機能を停止させることなく、正常なサービスを継続できる能力のことです。冗長化によって実現されます。","故障が起きても、何事もなかったかのように動き続ける。それがフォールトトレランスだ。障害の発生をユーザーに一切意識させない、システムの究極的な強靭性を示す設計思想と言える。

### フォールトトレランスとは
- Fault（障害）を Tolerance（許容する）という意味。障害が発生することを前提とし、それでもなおシステムが正常稼働を続けるための仕組み。
- 障害が発生したコンポーネントを瞬時に切り離し、待機させておいた予備のコンポーネントが即座に処理を引き継ぐ。これにより、サービスは中断しない。
- この思想の根幹にあるのは「冗長化」だ。サーバ、電源、ネットワーク経路、ストレージなど、システムのあらゆる要素を複数用意し、常に備えておく。

### 具体例で理解しろ
- サーバのクラスタ構成
  複数台のサーバで同じサービスを稼働させる。一台（アクティブ）が故障すると、即座にもう一台（スタンバイ）が処理を引き継ぐ（フェイルオーバー）。ユーザーはサービスが停止したことに気づかない。
- 無停電電源装置（UPS）と自家発電機
  停電が発生しても、UPSが瞬時に電力を供給し、その間に自家発電機が起動する。これにより、電力供給は途切れない。
- RAID1（ミラーリング）
  一台のディスクが故障しても、全く同じデータを持つもう一台のディスクが処理を継続する。サービスへの影響はない。

### フェールソフトとの違いを明確にしろ
この二つは、目指すレベルが全く違う。
- フェールソフト：障害時に「機能を縮小して」動き続ける（縮退運転）。ユーザーは性能低下などを体感する可能性がある。
- フォールトトレランス：障害時でも「通常通り」動き続ける。ユーザーは障害が発生したことすら認識しない。

フォールトトレランスは、冗長化のために高いコストを必要とする。だが、金融の勘定系システムや航空管制システムなど、社会インフラとして一瞬の停止も許されないミッションクリティカルなシステムにおいて、この設計思想は絶対的な要件となる。障害を予測し、許容し、乗り越える。この強靭さこそが、システムの信頼性を担保する。","secure-design","intermediate","design,principle,resilience,availability,architecture","","false",705